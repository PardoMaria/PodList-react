{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Songs/SongCard.jsx\";\nimport React from 'react';\n\nconst SongCard = ({\n  song,\n  typeSearch,\n  form,\n  handleOpen,\n  addFav\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"SongCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"albumImage\",\n      src: typeSearch ? song.album.images[0].url : song.image,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songCardInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songText\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"songName\",\n          children: [\"\\\"\", song.name, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"songArtist\",\n          children: [song.artists[0].name, \" | \", song.decade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: typeSearch ? song.preview_url : song.url,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), typeSearch ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpen(song.name),\n          children: \"Add Fav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), form === song.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addFav(song, \"60's\"),\n            children: \"60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addFav(song, \"70's\"),\n            children: \"70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 47\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SongCard;\nexport default SongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"sources":["/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Songs/SongCard.jsx"],"names":["React","SongCard","song","typeSearch","form","handleOpen","addFav","album","images","url","image","name","artists","decade","preview_url"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAoD;AACjE,sBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,GAAG,EAAEH,UAAU,GAAGD,IAAI,CAACK,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,GAAxB,GAA8BP,IAAI,CAACQ,KAFtD;AAGI,MAAA,GAAG,EAAER,IAAI,CAACS;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,2BAA0BT,IAAI,CAACS,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,qBAA2BT,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBD,IAA3C,SAAoDT,IAAI,CAACW,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,QAAQ,MAAf;AAAA,+BACI;AAAQ,UAAA,GAAG,EAAEV,UAAU,GAAGD,IAAI,CAACY,WAAR,GAAsBZ,IAAI,CAACO,GAAlD;AAAuD,UAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,EAQKN,UAAU,gBACP;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAME,UAAU,CAACH,IAAI,CAACS,IAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKP,IAAI,KAAKF,IAAI,CAACS,IAAd,gBAAqB;AAAA,kCAAK;AAAQ,YAAA,OAAO,EAAE,MAAML,MAAM,CAACJ,IAAD,EAAO,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAA6D;AAAQ,YAAA,OAAO,EAAE,MAAMI,MAAM,CAACJ,IAAD,EAAO,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB,GAAmJ,IAFxJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,GAKL,IAbV;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxBD;;KAAMD,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\n\nconst SongCard = ({ song, typeSearch, form, handleOpen, addFav }) => {\n    return (\n        <li className='SongCard'>\n            <img\n                className='albumImage'\n                src={typeSearch ? song.album.images[0].url : song.image}\n                alt={song.name} />\n            <div className='songCardInfo'>\n                <div className='songText'>\n                    <p className='songName'>\"{song.name}\"</p>\n                    <p className='songArtist'>{song.artists[0].name} | {song.decade}</p>\n                </div>\n                <audio controls>\n                    <source src={typeSearch ? song.preview_url : song.url} type='audio/mpeg' />\n                </audio>\n                {typeSearch ?\n                    <div>\n                        <button onClick={() => handleOpen(song.name)}>Add Fav</button>\n                        {form === song.name ? <div><button onClick={() => addFav(song, \"60's\")}>60</button><button onClick={() => addFav(song, \"70's\")}>70</button></div> : null}\n                    </div>\n                    : null}\n            </div>\n        </li>\n    )\n}\n\nexport default SongCard"]},"metadata":{},"sourceType":"module"}