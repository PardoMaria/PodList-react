{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Podcast/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getPodcastsFromSpotify } from '../../services/Api';\nimport PodcastCard from './PodcastCard';\n\nconst Test = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [podcasts, setPodcast] = useState([]);\n\n  const getPodcast = () => {\n    getPodcastsFromSpotify({\n      search: search\n    }).then(res => {\n      //pìntar los resultados\n      setPodcast(res);\n    }).catch(e => console.log(e));\n  };\n\n  console.log(podcast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Busca\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getPodcast(),\n      children: \"Clic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), podcasts.map(podcast => {\n      return /*#__PURE__*/_jsxDEV(PodcastCard, {\n        podcast: podcast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }), \" */}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"+AB32kuSRKxa2YXew2F+I2+sSqM=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Podcast/Test.jsx"],"names":["React","useState","getPodcastsFromSpotify","PodcastCard","Test","search","setSearch","podcasts","setPodcast","getPodcast","then","res","catch","e","console","log","podcast","target","value","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,sBAAR,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,UAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AAErBP,IAAAA,sBAAsB,CAAC;AAAEG,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAtB,CACKK,IADL,CACWC,GAAD,IAAS;AACX;AAEAH,MAAAA,UAAU,CAACG,GAAD,CAAV;AAEH,KANL,EAOKC,KAPL,CAOWC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAPhB;AAQH,GAVD;;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,WAAW,EAAC,OAAhC;AAAwC,QAAA,QAAQ,EAAGH,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACI,MAAF,CAASC,KAAV;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMT,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKF,QAAQ,CAACY,GAAT,CAAcH,OAAD,IAAa;AAE3B,0BAAO,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACC,KAHA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BD;;GAAMZ,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport {getPodcastsFromSpotify} from '../../services/Api'\nimport PodcastCard from './PodcastCard';\n\nconst Test = () => {\n    const [search, setSearch] = useState('')\n    const [podcasts, setPodcast] = useState([])\n\n    const getPodcast = () => {\n        \n        getPodcastsFromSpotify({ search: search })\n            .then((res) => {\n                //pìntar los resultados\n                \n                setPodcast(res)\n                \n            })\n            .catch(e => console.log(e))\n    }\n    console.log(podcast)\n    return (\n        <div>\n            <form>\n                <input type=\"text\"  placeholder='Busca' onChange={(e) => setSearch(e.target.value)}></input>\n            </form>\n            <button onClick={() => getPodcast()}>Clic</button>\n            {podcasts.map((podcast) => {\n            \n            return <PodcastCard podcast={podcast}/>\n            })} */}\n        </div>\n    );\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}