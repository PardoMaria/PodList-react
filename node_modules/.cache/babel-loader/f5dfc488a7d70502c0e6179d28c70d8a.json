{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Songs/SongMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SongSearch from './SongSearch';\nimport SongFav from './SongFav';\nimport { getSongsFromSpotify, createSong, getSongs } from '../../services';\n\nfunction SongsMenu() {\n  _s();\n\n  const [search, setSearch] = useState({\n    search: ''\n  });\n  const [matchSong, setMatchSong] = useState([]);\n  const [form, setForm] = useState(false);\n  const [fav, setFav] = useState([]);\n  useEffect(() => {\n    getSongs().then(data => {\n      setFav(data);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    getSongsFromSpotify(search).then(data => {\n      setMatchSong(data.slice(0, 3));\n    }).catch(err => console.log(err));\n  }, [search]);\n\n  const handleChange = e => {\n    setSearch({\n      search: e.target.value.toLowerCase()\n    });\n  };\n\n  const handleOpen = name => {\n    setForm(name);\n  };\n\n  const addFav = (song, decade) => {\n    song.decade = decade;\n    song.url = song.preview_url;\n    console.log(song);\n    createSong(song).then(() => {\n      getSongs().then(data => {\n        setFav(data);\n      });\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongMenu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splitted\",\n      children: [/*#__PURE__*/_jsxDEV(SongSearch, {\n        matchSong: matchSong,\n        handleOpen: handleOpen,\n        addFav: addFav,\n        form: form,\n        handleChange: handleChange,\n        search: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SongFav, {\n        fav: fav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongsMenu, \"luUbbow1Rtiwe+nAR0ytjo9pEJ8=\");\n\n_c = SongsMenu;\nexport default SongsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongsMenu\");","map":{"version":3,"sources":["/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/components/Songs/SongMenu.jsx"],"names":["React","useState","useEffect","SongSearch","SongFav","getSongsFromSpotify","createSong","getSongs","SongsMenu","search","setSearch","matchSong","setMatchSong","form","setForm","fav","setFav","then","data","catch","err","console","log","slice","handleChange","e","target","value","toLowerCase","handleOpen","name","addFav","song","decade","url","preview_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SongSearch from './SongSearch'\nimport SongFav from './SongFav'\nimport { getSongsFromSpotify, createSong, getSongs } from '../../services'\n\nfunction SongsMenu() {\n    const [search, setSearch] = useState({\n        search: ''\n    })\n    const [matchSong, setMatchSong] = useState([])\n    const [form, setForm] = useState(false)\n    const [fav, setFav] = useState([])\n\n    useEffect(() => {\n        getSongs()\n            .then(data => {\n                setFav(data)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    useEffect(() => {\n        getSongsFromSpotify(search)\n            .then(data => {\n                setMatchSong(data.slice(0, 3))\n            })\n            .catch(err => console.log(err))\n    }, [search])\n\n    const handleChange = (e) => {\n        setSearch({ search: e.target.value.toLowerCase() })\n    }\n\n    const handleOpen = (name) => {\n        setForm(name)\n    }\n\n    const addFav = (song, decade) => {\n        song.decade = decade\n        song.url = song.preview_url\n        console.log(song)\n        createSong(song)\n            .then(() => {\n                getSongs()\n                    .then(data => {\n                        setFav(data)\n                    })\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div className='SongMenu'>\n            <div className='splitted'>\n                <SongSearch matchSong={matchSong} handleOpen={handleOpen} addFav={addFav} form={form} handleChange={handleChange} search={search} />\n                <SongFav fav={fav}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SongsMenu"]},"metadata":{},"sourceType":"module"}