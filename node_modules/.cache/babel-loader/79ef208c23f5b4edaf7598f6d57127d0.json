{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true\n});\nhttp.interceptors.response.use(function (response) {\n  return response.data;\n}, function (error) {\n  var _error$response;\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.clear();\n    window.location.assign('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport const login = ({\n  email,\n  password\n}) => http.post('/login', {\n  email,\n  password\n});\nexport const logout = () => http.post('/logout');\nexport const getSongsFromSpotify = ({\n  search\n}) => {\n  return http.post('/songsSpotify', {\n    search\n  });\n};\nexport const createSong = ({\n  name,\n  url,\n  artists,\n  decade,\n  album\n}) => {\n  return http.post('/song/new', {\n    name,\n    url,\n    artists,\n    decade,\n    album\n  });\n};\nexport const getSongs = () => {\n  return http.get('/song');\n};\nexport const createLocation = ({\n  name,\n  description,\n  lat,\n  lng\n}) => {\n  return http.post('/location/new', {\n    name,\n    description,\n    lat,\n    lng\n  });\n};\nexport const getLocations = () => {\n  return http.get('/location');\n};","map":{"version":3,"sources":["/Users/mariapardogenis/Desktop/Ironhack/Proyecto-Final/PodList/PodList-react/podlist-react/src/services/Api.js"],"names":["axios","http","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","response","use","data","error","status","localStorage","clear","window","location","assign","Promise","reject","login","email","password","post","logout","getSongsFromSpotify","search","createSong","name","url","artists","decade","album","getSongs","get","createLocation","description","lat","lng","getLocations"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADG;AAExBC,EAAAA,eAAe,EAAE;AAFO,CAAb,CAAb;AAKAN,IAAI,CAACO,YAAL,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,UAAUD,QAAV,EAAoB;AACjD,SAAOA,QAAQ,CAACE,IAAhB;AACD,CAFD,EAEG,UAAUC,KAAV,EAAiB;AAAA;;AAClB,MAAI,oBAAAA,KAAK,CAACH,QAAN,oEAAgBI,MAAhB,MAA2B,GAA/B,EAAoC;AAClCC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;AACD;;AAED,SAAOC,OAAO,CAACC,MAAR,CAAeR,KAAf,CAAP;AACD,CATD;AAWA,OAAO,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyBtB,IAAI,CAACuB,IAAL,CAAU,QAAV,EAAoB;AAAEF,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,CAAvC;AAEP,OAAO,MAAME,MAAM,GAAG,MAAMxB,IAAI,CAACuB,IAAL,CAAU,SAAV,CAArB;AAGP,OAAO,MAAME,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjD,SAAO1B,IAAI,CAACuB,IAAL,CAAU,eAAV,EAA2B;AAACG,IAAAA;AAAD,GAA3B,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,MAAtB;AAA8BC,EAAAA;AAA9B,CAAD,KAA2C;AACnE,SAAOhC,IAAI,CAACuB,IAAL,CAAU,WAAV,EAAuB;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA;AAA9B,GAAvB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAOjC,IAAI,CAACkC,GAAL,CAAS,OAAT,CAAP;AACD,CAFM;AAKP,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEP,EAAAA,IAAF;AAAQQ,EAAAA,WAAR;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA;AAA1B,CAAD,KAAqC;AACjE,SAAOtC,IAAI,CAACuB,IAAL,CAAU,eAAV,EAA2B;AAAEK,IAAAA,IAAF;AAAQQ,IAAAA,WAAR;AAAqBC,IAAAA,GAArB;AAA0BC,IAAAA;AAA1B,GAA3B,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAOvC,IAAI,CAACkC,GAAL,CAAS,WAAT,CAAP;AACD,CAFM","sourcesContent":["import axios from 'axios'\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true\n})\n\nhttp.interceptors.response.use(function (response) {\n  return response.data\n}, function (error) {\n  if (error.response?.status === 401) {\n    localStorage.clear()\n    window.location.assign('/login')\n  }\n\n  return Promise.reject(error)\n})\n\nexport const login = ({ email, password }) => http.post('/login', { email, password })\n\nexport const logout = () => http.post('/logout')\n\n\nexport const getSongsFromSpotify = ({ search }) => {\n  return http.post('/songsSpotify', {search})\n}\n\nexport const createSong = ({ name, url, artists, decade, album }) => {\n  return http.post('/song/new', { name, url, artists, decade, album })\n}\n\nexport const getSongs = () => {\n  return http.get('/song')\n}\n\n\nexport const createLocation = ({ name, description, lat, lng }) => {\n  return http.post('/location/new', { name, description, lat, lng })\n}\n\nexport const getLocations = () => {\n  return http.get('/location')\n}"]},"metadata":{},"sourceType":"module"}